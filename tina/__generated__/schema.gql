# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  GlobalCollection(relativePath: String): GlobalCollection!
  GlobalCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: GlobalCollectionFilter): GlobalCollectionConnection!
  HomePageCollection(relativePath: String): HomePageCollection!
  HomePageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: HomePageCollectionFilter): HomePageCollectionConnection!
  FlavorPageCollection(relativePath: String): FlavorPageCollection!
  FlavorPageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: FlavorPageCollectionFilter): FlavorPageCollectionConnection!
  ProductPageCollection(relativePath: String): ProductPageCollection!
  ProductPageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ProductPageCollectionFilter): ProductPageCollectionConnection!
  PoliciesAndPricingPageCollection(relativePath: String): PoliciesAndPricingPageCollection!
  PoliciesAndPricingPageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PoliciesAndPricingPageCollectionFilter): PoliciesAndPricingPageCollectionConnection!
  AboutUsPageCollection(relativePath: String): AboutUsPageCollection!
  AboutUsPageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AboutUsPageCollectionFilter): AboutUsPageCollectionConnection!
  AboutThisWebsitePageCollection(relativePath: String): AboutThisWebsitePageCollection!
  AboutThisWebsitePageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AboutThisWebsitePageCollectionFilter): AboutThisWebsitePageCollectionConnection!
  ContactUsPageCollection(relativePath: String): ContactUsPageCollection!
  ContactUsPageCollectionConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ContactUsPageCollectionFilter): ContactUsPageCollectionConnection!
}

input DocumentFilter {
  GlobalCollection: GlobalCollectionFilter
  HomePageCollection: HomePageCollectionFilter
  FlavorPageCollection: FlavorPageCollectionFilter
  ProductPageCollection: ProductPageCollectionFilter
  PoliciesAndPricingPageCollection: PoliciesAndPricingPageCollectionFilter
  AboutUsPageCollection: AboutUsPageCollectionFilter
  AboutThisWebsitePageCollection: AboutThisWebsitePageCollectionFilter
  ContactUsPageCollection: ContactUsPageCollectionFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = GlobalCollection | HomePageCollection | FlavorPageCollection | ProductPageCollection | PoliciesAndPricingPageCollection | AboutUsPageCollection | AboutThisWebsitePageCollection | ContactUsPageCollection | Folder

type GlobalCollectionHeaderSocialLinks {
  label: String!
  url: String!
}

type GlobalCollectionHeaderNavigationSubNavItem {
  label: String!
  url: String!
}

type GlobalCollectionHeaderNavigation {
  label: String!
  url: String
  subNavItem: [GlobalCollectionHeaderNavigationSubNavItem]
}

type GlobalCollectionHeader {
  phoneNumber: String!
  socialLinks: [GlobalCollectionHeaderSocialLinks]
  logo: String!
  navigation: [GlobalCollectionHeaderNavigation]
}

type GlobalCollectionFooter {
  label: String!
}

type GlobalCollection implements Node & Document {
  header: GlobalCollectionHeader
  footer: GlobalCollectionFooter
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input GlobalCollectionHeaderSocialLinksFilter {
  label: StringFilter
  url: StringFilter
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input GlobalCollectionHeaderNavigationSubNavItemFilter {
  label: StringFilter
  url: StringFilter
}

input GlobalCollectionHeaderNavigationFilter {
  label: StringFilter
  url: StringFilter
  subNavItem: GlobalCollectionHeaderNavigationSubNavItemFilter
}

input GlobalCollectionHeaderFilter {
  phoneNumber: StringFilter
  socialLinks: GlobalCollectionHeaderSocialLinksFilter
  logo: ImageFilter
  navigation: GlobalCollectionHeaderNavigationFilter
}

input GlobalCollectionFooterFilter {
  label: StringFilter
}

input GlobalCollectionFilter {
  header: GlobalCollectionHeaderFilter
  footer: GlobalCollectionFooterFilter
}

type GlobalCollectionConnectionEdges {
  cursor: String!
  node: GlobalCollection
}

type GlobalCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [GlobalCollectionConnectionEdges]
}

type HomePageCollectionMetadata {
  title: String
  description: String
}

type HomePageCollectionQuotes {
  quote: String!
  name: String!
}

type HomePageCollection implements Node & Document {
  metadata: HomePageCollectionMetadata
  heroImage: String
  cta: String
  body: JSON
  quotes: [HomePageCollectionQuotes]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input HomePageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input HomePageCollectionQuotesFilter {
  quote: StringFilter
  name: StringFilter
}

input HomePageCollectionFilter {
  metadata: HomePageCollectionMetadataFilter
  heroImage: ImageFilter
  cta: StringFilter
  body: RichTextFilter
  quotes: HomePageCollectionQuotesFilter
}

type HomePageCollectionConnectionEdges {
  cursor: String!
  node: HomePageCollection
}

type HomePageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [HomePageCollectionConnectionEdges]
}

type FlavorPageCollectionMetadata {
  title: String
  description: String
}

type FlavorPageCollectionFlavorGroups {
  label: String!
  flavors: [String!]!
}

type FlavorPageCollection implements Node & Document {
  metadata: FlavorPageCollectionMetadata
  title: String!
  body: JSON
  heroImage: String!
  flavorGroups: [FlavorPageCollectionFlavorGroups]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input FlavorPageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input FlavorPageCollectionFlavorGroupsFilter {
  label: StringFilter
  flavors: StringFilter
}

input FlavorPageCollectionFilter {
  metadata: FlavorPageCollectionMetadataFilter
  title: StringFilter
  body: RichTextFilter
  heroImage: ImageFilter
  flavorGroups: FlavorPageCollectionFlavorGroupsFilter
}

type FlavorPageCollectionConnectionEdges {
  cursor: String!
  node: FlavorPageCollection
}

type FlavorPageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [FlavorPageCollectionConnectionEdges]
}

type ProductPageCollectionMetadata {
  title: String
  description: String
}

type ProductPageCollectionImages {
  image: String!
}

type ProductPageCollection implements Node & Document {
  metadata: ProductPageCollectionMetadata
  hidden: Boolean
  title: String!
  body: JSON
  images: [ProductPageCollectionImages]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ProductPageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input ProductPageCollectionImagesFilter {
  image: ImageFilter
}

input ProductPageCollectionFilter {
  metadata: ProductPageCollectionMetadataFilter
  hidden: BooleanFilter
  title: StringFilter
  body: RichTextFilter
  images: ProductPageCollectionImagesFilter
}

type ProductPageCollectionConnectionEdges {
  cursor: String!
  node: ProductPageCollection
}

type ProductPageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ProductPageCollectionConnectionEdges]
}

type PoliciesAndPricingPageCollectionMetadata {
  title: String
  description: String
}

type PoliciesAndPricingPageCollection implements Node & Document {
  metadata: PoliciesAndPricingPageCollectionMetadata
  title: String!
  heroImage: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PoliciesAndPricingPageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input PoliciesAndPricingPageCollectionFilter {
  metadata: PoliciesAndPricingPageCollectionMetadataFilter
  title: StringFilter
  heroImage: ImageFilter
  body: RichTextFilter
}

type PoliciesAndPricingPageCollectionConnectionEdges {
  cursor: String!
  node: PoliciesAndPricingPageCollection
}

type PoliciesAndPricingPageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PoliciesAndPricingPageCollectionConnectionEdges]
}

type AboutUsPageCollectionMetadata {
  title: String
  description: String
}

type AboutUsPageCollectionOwnerPhotos {
  image: String!
}

type AboutUsPageCollectionFounderPhotos {
  image: String!
}

type AboutUsPageCollection implements Node & Document {
  metadata: AboutUsPageCollectionMetadata
  title: String!
  newOwnershipBody: JSON
  ownerPhotos: [AboutUsPageCollectionOwnerPhotos]
  aboutTheFounderBody: JSON
  founderPhotos: [AboutUsPageCollectionFounderPhotos]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AboutUsPageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input AboutUsPageCollectionOwnerPhotosFilter {
  image: ImageFilter
}

input AboutUsPageCollectionFounderPhotosFilter {
  image: ImageFilter
}

input AboutUsPageCollectionFilter {
  metadata: AboutUsPageCollectionMetadataFilter
  title: StringFilter
  newOwnershipBody: RichTextFilter
  ownerPhotos: AboutUsPageCollectionOwnerPhotosFilter
  aboutTheFounderBody: RichTextFilter
  founderPhotos: AboutUsPageCollectionFounderPhotosFilter
}

type AboutUsPageCollectionConnectionEdges {
  cursor: String!
  node: AboutUsPageCollection
}

type AboutUsPageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AboutUsPageCollectionConnectionEdges]
}

type AboutThisWebsitePageCollectionMetadata {
  title: String
  description: String
}

type AboutThisWebsitePageCollection implements Node & Document {
  metadata: AboutThisWebsitePageCollectionMetadata
  title: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AboutThisWebsitePageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input AboutThisWebsitePageCollectionFilter {
  metadata: AboutThisWebsitePageCollectionMetadataFilter
  title: StringFilter
  body: RichTextFilter
}

type AboutThisWebsitePageCollectionConnectionEdges {
  cursor: String!
  node: AboutThisWebsitePageCollection
}

type AboutThisWebsitePageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AboutThisWebsitePageCollectionConnectionEdges]
}

type ContactUsPageCollectionMetadata {
  title: String
  description: String
}

type ContactUsPageCollection implements Node & Document {
  metadata: ContactUsPageCollectionMetadata
  contactDetails: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ContactUsPageCollectionMetadataFilter {
  title: StringFilter
  description: StringFilter
}

input ContactUsPageCollectionFilter {
  metadata: ContactUsPageCollectionMetadataFilter
  contactDetails: RichTextFilter
}

type ContactUsPageCollectionConnectionEdges {
  cursor: String!
  node: ContactUsPageCollection
}

type ContactUsPageCollectionConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ContactUsPageCollectionConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateGlobalCollection(relativePath: String!, params: GlobalCollectionMutation!): GlobalCollection!
  createGlobalCollection(relativePath: String!, params: GlobalCollectionMutation!): GlobalCollection!
  updateHomePageCollection(relativePath: String!, params: HomePageCollectionMutation!): HomePageCollection!
  createHomePageCollection(relativePath: String!, params: HomePageCollectionMutation!): HomePageCollection!
  updateFlavorPageCollection(relativePath: String!, params: FlavorPageCollectionMutation!): FlavorPageCollection!
  createFlavorPageCollection(relativePath: String!, params: FlavorPageCollectionMutation!): FlavorPageCollection!
  updateProductPageCollection(relativePath: String!, params: ProductPageCollectionMutation!): ProductPageCollection!
  createProductPageCollection(relativePath: String!, params: ProductPageCollectionMutation!): ProductPageCollection!
  updatePoliciesAndPricingPageCollection(relativePath: String!, params: PoliciesAndPricingPageCollectionMutation!): PoliciesAndPricingPageCollection!
  createPoliciesAndPricingPageCollection(relativePath: String!, params: PoliciesAndPricingPageCollectionMutation!): PoliciesAndPricingPageCollection!
  updateAboutUsPageCollection(relativePath: String!, params: AboutUsPageCollectionMutation!): AboutUsPageCollection!
  createAboutUsPageCollection(relativePath: String!, params: AboutUsPageCollectionMutation!): AboutUsPageCollection!
  updateAboutThisWebsitePageCollection(relativePath: String!, params: AboutThisWebsitePageCollectionMutation!): AboutThisWebsitePageCollection!
  createAboutThisWebsitePageCollection(relativePath: String!, params: AboutThisWebsitePageCollectionMutation!): AboutThisWebsitePageCollection!
  updateContactUsPageCollection(relativePath: String!, params: ContactUsPageCollectionMutation!): ContactUsPageCollection!
  createContactUsPageCollection(relativePath: String!, params: ContactUsPageCollectionMutation!): ContactUsPageCollection!
}

input DocumentUpdateMutation {
  GlobalCollection: GlobalCollectionMutation
  HomePageCollection: HomePageCollectionMutation
  FlavorPageCollection: FlavorPageCollectionMutation
  ProductPageCollection: ProductPageCollectionMutation
  PoliciesAndPricingPageCollection: PoliciesAndPricingPageCollectionMutation
  AboutUsPageCollection: AboutUsPageCollectionMutation
  AboutThisWebsitePageCollection: AboutThisWebsitePageCollectionMutation
  ContactUsPageCollection: ContactUsPageCollectionMutation
  relativePath: String
}

input DocumentMutation {
  GlobalCollection: GlobalCollectionMutation
  HomePageCollection: HomePageCollectionMutation
  FlavorPageCollection: FlavorPageCollectionMutation
  ProductPageCollection: ProductPageCollectionMutation
  PoliciesAndPricingPageCollection: PoliciesAndPricingPageCollectionMutation
  AboutUsPageCollection: AboutUsPageCollectionMutation
  AboutThisWebsitePageCollection: AboutThisWebsitePageCollectionMutation
  ContactUsPageCollection: ContactUsPageCollectionMutation
}

input GlobalCollectionHeaderSocialLinksMutation {
  label: String
  url: String
}

input GlobalCollectionHeaderNavigationSubNavItemMutation {
  label: String
  url: String
}

input GlobalCollectionHeaderNavigationMutation {
  label: String
  url: String
  subNavItem: [GlobalCollectionHeaderNavigationSubNavItemMutation]
}

input GlobalCollectionHeaderMutation {
  phoneNumber: String
  socialLinks: [GlobalCollectionHeaderSocialLinksMutation]
  logo: String
  navigation: [GlobalCollectionHeaderNavigationMutation]
}

input GlobalCollectionFooterMutation {
  label: String
}

input GlobalCollectionMutation {
  header: GlobalCollectionHeaderMutation
  footer: GlobalCollectionFooterMutation
}

input HomePageCollectionMetadataMutation {
  title: String
  description: String
}

input HomePageCollectionQuotesMutation {
  quote: String
  name: String
}

input HomePageCollectionMutation {
  metadata: HomePageCollectionMetadataMutation
  heroImage: String
  cta: String
  body: JSON
  quotes: [HomePageCollectionQuotesMutation]
}

input FlavorPageCollectionMetadataMutation {
  title: String
  description: String
}

input FlavorPageCollectionFlavorGroupsMutation {
  label: String
  flavors: [String]
}

input FlavorPageCollectionMutation {
  metadata: FlavorPageCollectionMetadataMutation
  title: String
  body: JSON
  heroImage: String
  flavorGroups: [FlavorPageCollectionFlavorGroupsMutation]
}

input ProductPageCollectionMetadataMutation {
  title: String
  description: String
}

input ProductPageCollectionImagesMutation {
  image: String
}

input ProductPageCollectionMutation {
  metadata: ProductPageCollectionMetadataMutation
  hidden: Boolean
  title: String
  body: JSON
  images: [ProductPageCollectionImagesMutation]
}

input PoliciesAndPricingPageCollectionMetadataMutation {
  title: String
  description: String
}

input PoliciesAndPricingPageCollectionMutation {
  metadata: PoliciesAndPricingPageCollectionMetadataMutation
  title: String
  heroImage: String
  body: JSON
}

input AboutUsPageCollectionMetadataMutation {
  title: String
  description: String
}

input AboutUsPageCollectionOwnerPhotosMutation {
  image: String
}

input AboutUsPageCollectionFounderPhotosMutation {
  image: String
}

input AboutUsPageCollectionMutation {
  metadata: AboutUsPageCollectionMetadataMutation
  title: String
  newOwnershipBody: JSON
  ownerPhotos: [AboutUsPageCollectionOwnerPhotosMutation]
  aboutTheFounderBody: JSON
  founderPhotos: [AboutUsPageCollectionFounderPhotosMutation]
}

input AboutThisWebsitePageCollectionMetadataMutation {
  title: String
  description: String
}

input AboutThisWebsitePageCollectionMutation {
  metadata: AboutThisWebsitePageCollectionMetadataMutation
  title: String
  body: JSON
}

input ContactUsPageCollectionMetadataMutation {
  title: String
  description: String
}

input ContactUsPageCollectionMutation {
  metadata: ContactUsPageCollectionMetadataMutation
  contactDetails: JSON
}

schema {
  query: Query
  mutation: Mutation
}
